"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkarcgis_starter"] = self["webpackChunkarcgis_starter"] || []).push([["vendors-node_modules_arcgis_core_views_webgl_Texture_js"],{

/***/ "./node_modules/@arcgis/core/views/webgl/Texture.js":
/*!**********************************************************!*\
  !*** ./node_modules/@arcgis/core/views/webgl/Texture.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Texture\": () => (/* binding */ E)\n/* harmony export */ });\n/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/has.js */ \"./node_modules/@arcgis/core/core/has.js\");\n/* harmony import */ var _core_mathUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/mathUtils.js */ \"./node_modules/@arcgis/core/core/mathUtils.js\");\n/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/maybe.js */ \"./node_modules/@arcgis/core/core/maybe.js\");\n/* harmony import */ var _checkWebGLError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./checkWebGLError.js */ \"./node_modules/@arcgis/core/views/webgl/checkWebGLError.js\");\n/* harmony import */ var _context_util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./context-util.js */ \"./node_modules/@arcgis/core/views/webgl/context-util.js\");\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./enums.js */ \"./node_modules/@arcgis/core/views/webgl/enums.js\");\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nconst u={target:_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureType.TEXTURE_2D,samplingMode:_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.LINEAR,wrapMode:_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureWrapMode.REPEAT,flipped:!1,hasMipmap:!1,isOpaque:!1,unpackAlignment:4,preMultiplyAlpha:!1,isImmutable:!1},c=4;let E=class{constructor(t,e,i=null){this._context=t,this.type=\"texture\",this._glName=null,this._samplingModeDirty=!1,this._wrapModeDirty=!1,this._wasImmutablyAllocated=!1,t.instanceCounter.increment(_enums_js__WEBPACK_IMPORTED_MODULE_5__.ResourceType.Texture,this),this._descriptor={...u,...e};for(const r in u){void 0===this._descriptor[r]&&(this._descriptor[r]=u[r])}if(t.type!==_context_util_js__WEBPACK_IMPORTED_MODULE_4__.ContextType.WEBGL2&&(this._descriptor.isImmutable&&(this._descriptor.isImmutable=!1),A(this._descriptor.target)))throw new Error(\"3D and array textures are not supported in WebGL1\");this._descriptor.target===_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureType.TEXTURE_CUBE_MAP?this._setDataCubeMap(i):this.setData(i)}get glName(){return this._glName}get descriptor(){return this._descriptor}get isDirty(){return this._samplingModeDirty||this._wrapModeDirty}dispose(){this._context.gl&&this._glName&&(this._context.unbindTexture(this),this._context.gl.deleteTexture(this._glName),this._glName=null,this._context.instanceCounter.decrement(_enums_js__WEBPACK_IMPORTED_MODULE_5__.ResourceType.Texture,this))}release(){this.dispose()}resize(t,e){const i=this._descriptor;if(i.width!==t||i.height!==e){if(this._wasImmutablyAllocated)throw new Error(\"Immutable textures can't be resized!\");i.width=t,i.height=e,this._descriptor.target===_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureType.TEXTURE_CUBE_MAP?this._setDataCubeMap(null):this.setData(null)}}_setDataCubeMap(t=null){for(let e=_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureType.TEXTURE_CUBE_MAP_POSITIVE_X;e<=_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureType.TEXTURE_CUBE_MAP_NEGATIVE_Z;e++)this._setData(t,e)}setData(t){this._setData(t)}_setData(t,i){if(!this._context||!this._context.gl)return;const r=this._context.gl;this._glName||(this._glName=r.createTexture()),void 0===t&&(t=null);const s=this._descriptor,a=i??s.target,n=A(a);null===t&&(s.width=s.width||c,s.height=s.height||c,n&&(s.depth=s.depth??1));const l=this._context.bindTexture(this,E.TEXTURE_UNIT_FOR_UPDATES);this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES),E._validateTexture(this._context,s),this._configurePixelStorage(),(0,_checkWebGLError_js__WEBPACK_IMPORTED_MODULE_3__.checkWebGLError)(r);const h=s.pixelFormat;let p=s.internalFormat??this._deriveInternalFormat(h,s.dataType);if(f(t)){let e=t.width,i=t.height;const l=1;t instanceof HTMLVideoElement&&(e=t.videoWidth,i=t.videoHeight),s.width&&s.height,n&&s.depth,s.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(a,p,s.hasMipmap,e,i,l),this._texImage(a,0,p,e,i,l,t),(0,_checkWebGLError_js__WEBPACK_IMPORTED_MODULE_3__.checkWebGLError)(r),s.hasMipmap&&this.generateMipmap(),void 0===s.width&&(s.width=e),void 0===s.height&&(s.height=i),n&&void 0===s.depth&&(s.depth=l)}else{const{width:i,height:l,depth:h}=s;if(null==i||null==l)throw new Error(\"Width and height must be specified!\");if(n&&null==h)throw new Error(\"Depth must be specified!\");if(s.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(a,p,s.hasMipmap,i,l,h),r.DEPTH24_STENCIL8&&p===r.DEPTH_STENCIL&&(p=r.DEPTH24_STENCIL8),x(t)){const o=t.levels,n=w(a,i,l,h),_=Math.min(n-1,o.length-1);(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.isSome)(this._context.gl2)?r.texParameteri(s.target,this._context.gl2.TEXTURE_MAX_LEVEL,_):s.hasMipmap=s.hasMipmap&&n===o.length;const m=p;if(!T(m))throw new Error(\"Attempting to use compressed data with an umcompressed format!\");this._forEachMipmapLevel(((t,e,i,r)=>{const s=o[Math.min(t,o.length-1)];this._compressedTexImage(a,t,m,e,i,r,s)}),_)}else (0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.isSome)(t)?(this._texImage(a,0,p,i,l,h,t),(0,_checkWebGLError_js__WEBPACK_IMPORTED_MODULE_3__.checkWebGLError)(r),s.hasMipmap&&this.generateMipmap()):this._forEachMipmapLevel(((t,e,i,s)=>{this._texImage(a,t,p,e,i,s,null),(0,_checkWebGLError_js__WEBPACK_IMPORTED_MODULE_3__.checkWebGLError)(r)}))}E._applySamplingMode(r,this._descriptor),E._applyWrapMode(r,this._descriptor),E._applyAnisotropicFilteringParameters(this._context,this._descriptor),(0,_checkWebGLError_js__WEBPACK_IMPORTED_MODULE_3__.checkWebGLError)(r),this._context.bindTexture(l,E.TEXTURE_UNIT_FOR_UPDATES)}updateData(t,r,o,s,a,n,l=0){n||console.error(\"An attempt to use uninitialized data!\"),this._glName||console.error(\"An attempt to update uninitialized texture!\");const h=this._context.gl,p=this._descriptor,{pixelFormat:_,dataType:m,target:d,isImmutable:u}=p,c=p.internalFormat??this._deriveInternalFormat(_,m);if(u&&!this._wasImmutablyAllocated)throw new Error(\"Cannot update immutable texture before allocation!\");const g=this._context.bindTexture(this,E.TEXTURE_UNIT_FOR_UPDATES,!0);if((r<0||o<0||s>p.width||a>p.height||r+s>p.width||o+a>p.height)&&console.error(\"An attempt to update out of bounds of the texture!\"),this._configurePixelStorage(),l){if((0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.isNone)(this._context.gl2))return void console.error(\"Webgl2 must be enabled to use dataRowOffset!\");h.pixelStorei(this._context.gl2.UNPACK_SKIP_ROWS,l)}if(f(n)?(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.isSome)(this._context.gl2)?this._context.gl2.texSubImage2D(d,t,r,o,s,a,_,m,n):h.texSubImage2D(d,t,r,o,_,m,n):x(n)?h.compressedTexSubImage2D(d,t,r,o,s,a,c,n.levels[t]):h.texSubImage2D(d,t,r,o,s,a,_,m,n),l){if((0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.isNone)(this._context.gl2))return void console.error(\"Webgl2 must be enabled to use dataRowOffset!\");h.pixelStorei(this._context.gl2.UNPACK_SKIP_ROWS,0)}this._context.bindTexture(g,E.TEXTURE_UNIT_FOR_UPDATES)}updateData3D(t,e,r,o,s,a,n,l){l||console.error(\"An attempt to use uninitialized data!\"),this._glName||console.error(\"An attempt to update uninitialized texture!\");const h=this._context.gl2;if((0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.isNone)(h))throw new Error(\"3D textures are not supported in WebGL1\");const p=this._descriptor,{pixelFormat:_,dataType:m,isImmutable:d,target:u}=p,c=p.internalFormat??this._deriveInternalFormat(_,m);if(d&&!this._wasImmutablyAllocated)throw new Error(\"Cannot update immutable texture before allocation!\");A(u)||console.warn(\"Attempting to set 3D texture data on a non-3D texture\");const g=this._context.bindTexture(this,E.TEXTURE_UNIT_FOR_UPDATES);if(this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES),(e<0||r<0||o<0||s>p.width||a>p.height||n>p.depth||e+s>p.width||r+a>p.height||o+n>p.depth)&&console.error(\"An attempt to update out of bounds of the texture!\"),this._configurePixelStorage(),x(l))l=l.levels[t],h.compressedTexSubImage3D(u,t,e,r,o,s,a,n,c,l);else{const i=l;h.texSubImage3D(u,t,e,r,o,s,a,n,_,m,i)}this._context.bindTexture(g,E.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){const t=this._descriptor;if(!t.hasMipmap){if(this._wasImmutablyAllocated)throw new Error(\"Cannot add mipmaps to immutable texture after allocation\");t.hasMipmap=!0,this._samplingModeDirty=!0,E._validateTexture(this._context,t)}t.samplingMode===_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.LINEAR?(this._samplingModeDirty=!0,t.samplingMode=_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.LINEAR_MIPMAP_NEAREST):t.samplingMode===_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.NEAREST&&(this._samplingModeDirty=!0,t.samplingMode=_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.NEAREST_MIPMAP_NEAREST);const e=this._context.bindTexture(this,E.TEXTURE_UNIT_FOR_UPDATES);this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES);this._context.gl.generateMipmap(t.target),this._context.bindTexture(e,E.TEXTURE_UNIT_FOR_UPDATES)}setSamplingMode(t){t!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=t,this._samplingModeDirty=!0)}setWrapMode(t){t!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=t,E._validateTexture(this._context,this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const t=this._context.gl,e=this._descriptor;this._samplingModeDirty&&(E._applySamplingMode(t,e),this._samplingModeDirty=!1),this._wrapModeDirty&&(E._applyWrapMode(t,e),this._wrapModeDirty=!1)}_deriveInternalFormat(t,e){if(this._context.type===_context_util_js__WEBPACK_IMPORTED_MODULE_4__.ContextType.WEBGL1)return t;switch(e){case _enums_js__WEBPACK_IMPORTED_MODULE_5__.PixelType.FLOAT:switch(t){case _enums_js__WEBPACK_IMPORTED_MODULE_5__.PixelFormat.RGBA:return _enums_js__WEBPACK_IMPORTED_MODULE_5__.SizedPixelFormat.RGBA32F;case _enums_js__WEBPACK_IMPORTED_MODULE_5__.PixelFormat.RGB:return _enums_js__WEBPACK_IMPORTED_MODULE_5__.SizedPixelFormat.RGB32F;default:throw new Error(\"Unable to derive format\")}case _enums_js__WEBPACK_IMPORTED_MODULE_5__.PixelType.UNSIGNED_BYTE:switch(t){case _enums_js__WEBPACK_IMPORTED_MODULE_5__.PixelFormat.RGBA:return _enums_js__WEBPACK_IMPORTED_MODULE_5__.SizedPixelFormat.RGBA8;case _enums_js__WEBPACK_IMPORTED_MODULE_5__.PixelFormat.RGB:return _enums_js__WEBPACK_IMPORTED_MODULE_5__.SizedPixelFormat.RGB8}default:return t}}_configurePixelStorage(){const t=this._context.gl,{unpackAlignment:e,flipped:i,preMultiplyAlpha:r}=this._descriptor;t.pixelStorei(t.UNPACK_ALIGNMENT,e),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,i?1:0),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r?1:0)}_texStorage(t,e,r,o,s,a){const n=this._context.gl2;if((0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.isNone)(n))throw new Error(\"Immutable textures are not supported in WebGL1\");if(!g(e))throw new Error(\"Immutable textures must have a sized internal format\");if(!this._descriptor.isImmutable)return;const l=r?w(t,o,s,a):1;if(A(t)){if(null==a)throw new Error(\"Missing depth dimension for 3D texture upload\");n.texStorage3D(t,l,e,o,s,a)}else n.texStorage2D(t,l,e,o,s);this._wasImmutablyAllocated=!0}_texImage(t,i,o,a,n,l,h){const p=this._context.gl;let _=null;const m=this._context.type===_context_util_js__WEBPACK_IMPORTED_MODULE_4__.ContextType.WEBGL2,d=A(t),{isImmutable:u,pixelFormat:c,dataType:E}=this._descriptor;if(m&&(_=p),m||!f(h))if(u){if((0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.isSome)(h)){const e=h;if(d){if(null==l)throw new Error(\"Missing depth dimension for 3D texture upload\");_.texSubImage3D(t,i,0,0,0,a,n,l,c,E,e)}else p.texSubImage2D(t,i,0,0,a,n,c,E,e)}}else{const e=(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.unwrap)(h);if(d){if(null==l)throw new Error(\"Missing depth dimension for 3D texture upload\");_.texImage3D(t,i,o,a,n,l,0,c,E,e)}else p.texImage2D(t,i,o,a,n,0,c,E,e)}else p.texImage2D(t,0,o,c,E,h)}_compressedTexImage(t,i,r,o,a,n,l){const h=this._context.gl;let p=null;const _=A(t),m=this._descriptor.isImmutable;if(_){if(this._context.type!==_context_util_js__WEBPACK_IMPORTED_MODULE_4__.ContextType.WEBGL2)throw new Error(\"3D textures are not supported in WebGL1\");p=h}if(m){if((0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.isSome)(l))if(_){if(null==n)throw new Error(\"Missing depth dimension for 3D texture upload\");p.compressedTexSubImage3D(t,i,0,0,0,o,a,n,r,l)}else h.compressedTexSubImage2D(t,i,0,0,o,a,r,l)}else if(_){if(null==n)throw new Error(\"Missing depth dimension for 3D texture upload\");p.compressedTexImage3D(t,i,r,o,a,n,0,l)}else h.compressedTexImage2D(t,i,r,o,a,0,l)}_forEachMipmapLevel(t,e=1/0){let{width:i,height:r,depth:o,hasMipmap:s,target:n}=this._descriptor;const l=n===_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureType.TEXTURE_3D;if(null==i||null==r||l&&null==o)throw new Error(\"Missing texture dimensions for mipmap calculation\");for(let a=0;t(a,i,r,o),s&&(1!==i||1!==r||l&&1!==o)&&!(a>=e);++a)i=Math.max(1,i>>1),r=Math.max(1,r>>1),l&&(o=Math.max(1,o>>1))}static _validateTexture(e,i){(null!=i.width&&i.width<0||null!=i.height&&i.height<0||null!=i.depth&&i.depth<0)&&console.error(\"Negative dimension parameters are not allowed!\");const r=e.type===_context_util_js__WEBPACK_IMPORTED_MODULE_4__.ContextType.WEBGL2,o=null!=i.width&&(0,_core_mathUtils_js__WEBPACK_IMPORTED_MODULE_1__.isPowerOfTwo)(i.width)&&null!=i.height&&(0,_core_mathUtils_js__WEBPACK_IMPORTED_MODULE_1__.isPowerOfTwo)(i.height);r||!i.isImmutable&&!A(i.target)||console.error(\"Immutable and 3D-like textures are not supported in WebGL1!\"),r||o||(\"number\"==typeof i.wrapMode?i.wrapMode!==_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureWrapMode.CLAMP_TO_EDGE&&console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"):i.wrapMode.s===_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureWrapMode.CLAMP_TO_EDGE&&i.wrapMode.t===_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureWrapMode.CLAMP_TO_EDGE||console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"),i.hasMipmap&&console.error(\"Mipmapping requires power-of-two textures!\"))}static _applySamplingMode(t,e){let i=e.samplingMode,r=e.samplingMode;i===_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.LINEAR_MIPMAP_NEAREST||i===_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.LINEAR_MIPMAP_LINEAR?(i=_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.LINEAR,e.hasMipmap||(r=_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.LINEAR)):i!==_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.NEAREST_MIPMAP_NEAREST&&i!==_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.NEAREST_MIPMAP_LINEAR||(i=_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.NEAREST,e.hasMipmap||(r=_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.NEAREST)),t.texParameteri(e.target,t.TEXTURE_MAG_FILTER,i),t.texParameteri(e.target,t.TEXTURE_MIN_FILTER,r)}static _applyWrapMode(t,e){\"number\"==typeof e.wrapMode?(t.texParameteri(e.target,t.TEXTURE_WRAP_S,e.wrapMode),t.texParameteri(e.target,t.TEXTURE_WRAP_T,e.wrapMode)):(t.texParameteri(e.target,t.TEXTURE_WRAP_S,e.wrapMode.s),t.texParameteri(e.target,t.TEXTURE_WRAP_T,e.wrapMode.t))}static _applyAnisotropicFilteringParameters(t,e){const i=t.capabilities.textureFilterAnisotropic;if(!i)return;t.gl.texParameterf(e.target,i.TEXTURE_MAX_ANISOTROPY,e.maxAnisotropy??1)}};function g(t){return t in _enums_js__WEBPACK_IMPORTED_MODULE_5__.SizedPixelFormat}function T(t){return t in _enums_js__WEBPACK_IMPORTED_MODULE_5__.CompressedTextureFormat}function x(t){return (0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.isSome)(t)&&\"type\"in t&&\"compressed\"===t.type}function M(t){return (0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.isSome)(t)&&\"byteLength\"in t}function f(t){return (0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.isSome)(t)&&!x(t)&&!M(t)}function A(t){return t===_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureType.TEXTURE_3D||t===_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureType.TEXTURE_2D_ARRAY}function w(t,e,i,r=1){let o=Math.max(e,i);return t===_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureType.TEXTURE_3D&&(o=Math.max(o,r)),Math.round(Math.log(o)/Math.LN2)+1}E.TEXTURE_UNIT_FOR_UPDATES=0;\n\n\n//# sourceURL=webpack://arcgis-starter/./node_modules/@arcgis/core/views/webgl/Texture.js?");

/***/ }),

/***/ "./node_modules/@arcgis/core/views/webgl/checkWebGLError.js":
/*!******************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/webgl/checkWebGLError.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkWebGLError\": () => (/* binding */ u),\n/* harmony export */   \"hasFeatureFlagWebGLDebug\": () => (/* binding */ n),\n/* harmony export */   \"webglDebugEnabled\": () => (/* binding */ a),\n/* harmony export */   \"webglValidateShadersEnabled\": () => (/* binding */ c)\n/* harmony export */ });\n/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/Error.js */ \"./node_modules/@arcgis/core/core/Error.js\");\n/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/has.js */ \"./node_modules/@arcgis/core/core/has.js\");\n/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Logger.js */ \"./node_modules/@arcgis/core/core/Logger.js\");\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nconst o=_core_Logger_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getLogger(\"esri.views.webgl.checkWebGLError\");function t(e,r){switch(r){case e.INVALID_ENUM:return\"Invalid Enum. An unacceptable value has been specified for an enumerated argument.\";case e.INVALID_VALUE:return\"Invalid Value. A numeric argument is out of range.\";case e.INVALID_OPERATION:return\"Invalid Operation. The specified command is not allowed for the current state.\";case e.INVALID_FRAMEBUFFER_OPERATION:return\"Invalid Framebuffer operation. The currently bound framebuffer is not framebuffer complete when trying to render to or to read from it.\";case e.OUT_OF_MEMORY:return\"Out of memory. Not enough memory is left to execute the command.\";case e.CONTEXT_LOST_WEBGL:return\"WebGL context has been lost\";default:return\"Unknown error\"}}const n=!!(0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"enable-feature:webgl-debug\");function a(){return n}function c(){return n}function u(r){if(a()){const n=r.getError();if(n){const a=t(r,n),c=(new Error).stack;o.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"webgl-error\",\"WebGL error occured\",{message:a,stack:c}))}}}\n\n\n//# sourceURL=webpack://arcgis-starter/./node_modules/@arcgis/core/views/webgl/checkWebGLError.js?");

/***/ })

}]);